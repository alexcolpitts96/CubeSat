
	// set program buffer to only have 10 bytes of interest
	for (i = 0; i < BUFFER_SIZE_BYTE; i++) {
		if (i < 10) {
			program_buffer[i] = i;
		} else {
			program_buffer[i] = 0;
		}
	}

	// test flash programming and reading back
	destination = flashSSDConfig.PFlashBase
			+ (flashSSDConfig.PFlashSize - 6 * FTFx_PSECTOR_SIZE);
	size = BUFFER_SIZE_BYTE;

	// erase sector
	ret = FlashEraseSector(&flashSSDConfig, destination, size,
			g_FlashLaunchCommand);

	// program memory
	ret = FlashProgram(&flashSSDConfig, destination, size, program_buffer,
			g_FlashLaunchCommand);

	uint8_t return_buffer[BUFFER_SIZE_BYTE];
	ret = FlashReadResource(&flashSSDConfig, destination, program_buffer, 1,
			g_FlashLaunchCommand);

	memset(return_buffer, 0, sizeof(uint8_t) * BUFFER_SIZE_BYTE);
	uint8_t *flash_pointer = destination;
	for (i = 0; i < 10; i++) {
		return_buffer[i] = flash_pointer[i];
	}

	uint8_t image[7500];
	int image_length;

	master_init();

	char test[] = "bleh";
	for(int i = 0; i < 5; i++){
		putty_putchar(test[i]);
	}

	while (1) {
		capture();
		image_length = fifo_len();

		for (int i = 0; i < image_length; i++) {
			image[i] = cam_reg_read(0x3D);
		}
	}

